services:
  frontend:
    image: tantran308/remo-fe:${VERSION:-latest}
    env_file:
      - .env.prod
    ports:
      - 3001:3001
    networks:
      - remo
    restart: always

  backend:
    image: tantran308/remo-be:${VERSION:-latest}
    env_file:
      - .env.prod
    ports:
      - 3000:3000
    networks:
      - remo
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:16.3
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - /database:/var/lib/postgresql/data
    env_file:
      - .env.prod
    networks:
      - remo
    restart: always

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    ports:
      - 8080:8080
    env_file:
      - .env.prod
    networks:
      - remo
    restart: always
  # webserver:
  #   image: nginx:1.27.0-alpine
  #   container_name: webserver
  #   depends_on:
  #     - frontend
  #     - backend
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./webserver/nginx:/etc/nginx/templates:ro
  #     - ./webserver/certbot/conf:/etc/letsencrypt:ro
  #     - ./webserver/certbot/www:/var/www/certbot:ro
  #   networks:
  #     - remo
  #   restart: always

  # certbot:
  #   image: certbot/certbot:v2.10.0
  #   container_name: ssl
  #   volumes:
  #     - ./webserver/certbot/conf:/etc/letsencrypt/:rw
  #     - ./webserver/certbot/www:/var/www/certbot/:rw
  #   networks:
  #     - remo
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    env_file:
      - .env.prod
    depends_on:
      - backend
      - frontend
    ports:
      - 80:80
      - 443:443
    networks:
      - remo
    volumes:
      - ./webserver/certbot/conf:/etc/letsencrypt
      - ./webserver/nginx:/etc/nginx/templates

networks:
  remo:
    driver: bridge
